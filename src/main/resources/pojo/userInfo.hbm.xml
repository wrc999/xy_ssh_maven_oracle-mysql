<?xml version="1.0" encoding="UTF-8"?>
<!-- 导入约束    复制library->web app libraries->hibernate_core-5.0.7.final.jar->hibernate-mapping-3.0.dtd -->
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
 
 <!-- 配置表与实体对象的关系 -->
   <!-- package属性:填写一个包名.在元素内部凡是需要书写完整类名的属性,可以直接写简答类名了. -->
 <hibernate-mapping package="pojo">
 <!-- 
		class元素: 配置实体与表的对应关系的
			name: 完整类名
			table:数据库表名
	 -->
	<class name="userInfo" table="userInfo">
		<!-- id元素:配置主键映射的属性
				name: 填写主键对应属性名
				column(可选): 填写表中的主键列名.默认值:列名会默认使用属性名
				type(可选):填写列(属性)的类型.hibernate会自动检测实体的属性类型.
						每个类型有三种填法: java类型|hibernate类型|数据库类型
				not-null(可选):配置该属性(列)是否不能为空. 默认值:false
				length(可选):配置数据库中列的长度. 默认值:使用数据库类型的最大长度
		 -->
		<id name="use_id"  >
			<!-- generator:主键生成策略.就是每条记录录入时,主键的生成规则.(7个)
					identity : 主键自增.由数据库来维护主键值.录入时不需要指定主键.
					sequence: Oracle中的主键生成策略.
					increment(了解): 主键自增.由hibernate来维护.每次插入前会先查询表中id最大值.+1作为新主键值.有线程安全问题			
					hilo(了解): 高低位算法.主键自增.由hibernate来维护.开发时不使用.
					native:hilo+sequence+identity 自动三选一策略.
					uuid: 产生随机字符串作为主键. 主键类型必须为string 类型.
					assigned:自然主键生成策略. hibernate不会管理主键值.由开发人员自己录入.
					
			 -->
			<generator class="native"></generator>
		</id>
		<!-- property元素:除id之外的普通属性映射
				name: 填写属性名
				column(可选): 填写列名
				type(可选):填写列(属性)的类型.hibernate会自动检测实体的属性类型.
						每个类型有三种填法: java类型|hibernate类型|数据库类型
				not-null(可选):配置该属性(列)是否不能为空. 默认值:false
				length(可选):配置数据库中列的长度. 默认值:使用数据库类型的最大长度
		 -->
		<property name="avaPath" column="avaPath" >
			<!--  <column name="cust_name" sql-type="varchar" ></column> -->
		</property>
		<property name="nickName" column="nickName" ></property>
		<property name="birth" column="birth" ></property>
		<property name="sex" column="sex" ></property>
		<property name="school" column="school" ></property>
		<property name="academy" column="academy" ></property>
		<property name="major" column="major" ></property>
		<property name="entryYear" column="entryYear" ></property>
		<property name="perSign" column="perSign" ></property>
		<property name="hobby" column="hobby" ></property>
		<property name="homeTown" column="homeTown" ></property>
		<property name="account" column="account" ></property>
		<property name="passWord" column="passWord" ></property>
	</class>
 </hibernate-mapping>